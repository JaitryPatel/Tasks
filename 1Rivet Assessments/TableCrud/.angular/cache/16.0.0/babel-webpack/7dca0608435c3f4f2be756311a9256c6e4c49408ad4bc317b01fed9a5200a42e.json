{"ast":null,"code":"export class Validation {\n  //   static match(arg0: string, arg1: string): any {\n  //     throw new Error('Method not implemented.');\n  //   }\n  static match(controlName, checkControlName) {\n    return controls => {\n      const control = controls.get(controlName);\n      const checkControl = controls.get(checkControlName);\n      if (checkControl?.errors && !checkControl.errors['matching']) {\n        return null;\n      }\n      if (control?.value !== checkControl?.value) {\n        controls.get(checkControlName)?.setErrors({\n          matching: true\n        });\n        return {\n          matching: true\n        };\n      } else {\n        return null;\n      }\n    };\n  }\n}","map":{"version":3,"names":["Validation","match","controlName","checkControlName","controls","control","get","checkControl","errors","value","setErrors","matching"],"sources":["C:\\Users\\jaitry.patel\\Desktop\\Tasks\\1Rivet Assessments\\TableCrud\\src\\app\\employee\\validation.ts"],"sourcesContent":["import { AbstractControl } from \"@angular/forms\";\r\n\r\nexport class Validation {\r\n//   static match(arg0: string, arg1: string): any {\r\n//     throw new Error('Method not implemented.');\r\n//   }\r\n    static match(controlName: string, checkControlName : string)\r\n    {\r\n        return (controls : AbstractControl) => {\r\n            const control = controls.get(controlName);\r\n            const checkControl = controls.get(checkControlName);\r\n\r\n            if(checkControl?.errors && !checkControl.errors['matching'])\r\n            { \r\n                return null;\r\n            }\r\n\r\n            if(control?.value !== checkControl?.value)\r\n            {\r\n                controls.get(checkControlName)?.setErrors({ matching: true});\r\n                return {matching : true};\r\n                    \r\n            }\r\n            else\r\n            {\r\n                return null;\r\n            }\r\n        };\r\n    }\r\n}\r\n"],"mappings":"AAEA,OAAM,MAAOA,UAAU;EACvB;EACA;EACA;EACI,OAAOC,KAAKA,CAACC,WAAmB,EAAEC,gBAAyB;IAEvD,OAAQC,QAA0B,IAAI;MAClC,MAAMC,OAAO,GAAGD,QAAQ,CAACE,GAAG,CAACJ,WAAW,CAAC;MACzC,MAAMK,YAAY,GAAGH,QAAQ,CAACE,GAAG,CAACH,gBAAgB,CAAC;MAEnD,IAAGI,YAAY,EAAEC,MAAM,IAAI,CAACD,YAAY,CAACC,MAAM,CAAC,UAAU,CAAC,EAC3D;QACI,OAAO,IAAI;;MAGf,IAAGH,OAAO,EAAEI,KAAK,KAAKF,YAAY,EAAEE,KAAK,EACzC;QACIL,QAAQ,CAACE,GAAG,CAACH,gBAAgB,CAAC,EAAEO,SAAS,CAAC;UAAEC,QAAQ,EAAE;QAAI,CAAC,CAAC;QAC5D,OAAO;UAACA,QAAQ,EAAG;QAAI,CAAC;OAE3B,MAED;QACI,OAAO,IAAI;;IAEnB,CAAC;EACL"},"metadata":{},"sourceType":"module","externalDependencies":[]}