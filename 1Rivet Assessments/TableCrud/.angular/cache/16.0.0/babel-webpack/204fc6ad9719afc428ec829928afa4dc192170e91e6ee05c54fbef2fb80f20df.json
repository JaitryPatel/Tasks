{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nclass UpdateComponent {\n  constructor(activatedRoute, router) {\n    this.activatedRoute = activatedRoute;\n    this.router = router;\n  }\n  ngOnInit() {\n    this.activatedRoute.paramMap.subscribe(param => {\n      this.dataid = param['get'](\"id\");\n      console.log(\"data id is \", this.dataid);\n    });\n    this.api.fetchdata(this.dataid).subscribe(data => {\n      this.employee = data;\n    });\n  }\n  update() {\n    this.api.updateemployee(this.employee, this.dataid).subscribe(res => {\n      this.router.navigate([\"/\"]);\n    }).getemployee();\n  }\n}\nUpdateComponent.ɵfac = function UpdateComponent_Factory(t) {\n  return new (t || UpdateComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i1.Router));\n};\nUpdateComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UpdateComponent,\n  selectors: [[\"app-update\"]],\n  decls: 35,\n  vars: 0,\n  consts: [[1, \"container\"], [1, \"row\"], [1, \"col-md-6\"], [1, \"card\"], [1, \"modal-body\"], [1, \"form-group\", \"mb-2\"], [\"for\", \"exampleInputEmail1\"], [\"type\", \"text\", \"name\", \"name\", \"placeholder\", \"Enter Name\", 1, \"form-control\"], [\"type\", \"email\", \"name\", \"email\", \"placeholder\", \"Enter Email\", 1, \"form-control\"], [\"type\", \"email\", \"name\", \"city\", \"placeholder\", \"Enter City\", 1, \"form-control\"], [\"type\", \"number\", \"name\", \"pincode\", \"placeholder\", \"Enter Pincode \", 1, \"form-control\"], [\"type\", \"number\", \"name\", \"phonenumber\", \"placeholder\", \"Enter Phone No.\", 1, \"form-control\"], [1, \"btn\", \"btn-success\", 3, \"click\"], [\"routerLink\", \"/\", 1, \"btn\", \"btn-dark\"]],\n  template: function UpdateComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"h5\");\n      i0.ɵɵtext(5, \"Update Data\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"div\", 1)(7, \"div\", 4)(8, \"form\")(9, \"div\", 5)(10, \"label\", 6);\n      i0.ɵɵtext(11, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(12, \"input\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"div\", 5)(14, \"label\", 6);\n      i0.ɵɵtext(15, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(16, \"input\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"div\", 5)(18, \"label\", 6);\n      i0.ɵɵtext(19, \"City\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(20, \"input\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"div\", 5)(22, \"label\", 6);\n      i0.ɵɵtext(23, \"Pincode\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(24, \"input\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"div\", 5)(26, \"label\", 6);\n      i0.ɵɵtext(27, \"Phone No.\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(28, \"input\", 11);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(29, \"div\")(30, \"button\", 12);\n      i0.ɵɵlistener(\"click\", function UpdateComponent_Template_button_click_30_listener() {\n        return ctx.update();\n      });\n      i0.ɵɵtext(31, \"Update\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(32, \" \\u00A0 \");\n      i0.ɵɵelementStart(33, \"button\", 13);\n      i0.ɵɵtext(34, \"Back\");\n      i0.ɵɵelementEnd()()()()()()();\n    }\n  },\n  styles: [\"h5[_ngcontent-%COMP%] {\\n  text-align: center;\\n}\\n\\n.card[_ngcontent-%COMP%] {\\n  top: 50%;\\n  left: 100%;\\n  width: 435px;\\n  padding: 31px 40px;\\n  transform: translate(-50%, -50%);\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZW1wbG95ZWUvdXBkYXRlL3VwZGF0ZS5jb21wb25lbnQuc2NzcyIsIndlYnBhY2s6Ly8uLy4uLy4uLzFSaXZldCUyMEFzc2Vzc21lbnRzL1RhYmxlQ3J1ZC9zcmMvYXBwL2VtcGxveWVlL3VwZGF0ZS91cGRhdGUuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxrQkFBQTtBQ0NKOztBRENBO0VBQ0ksUUFBQTtFQUNBLFVBQUE7RUFDQSxZQUFBO0VBQ0Esa0JBQUE7RUFDQSxnQ0FBQTtBQ0VKIiwic291cmNlc0NvbnRlbnQiOlsiaDV7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn1cclxuLmNhcmR7XHJcbiAgICB0b3A6IDUwJTtcclxuICAgIGxlZnQ6IDEwMCU7XHJcbiAgICB3aWR0aDogNDM1cHg7XHJcbiAgICBwYWRkaW5nOiAzMXB4IDQwcHg7XHJcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcclxufSIsImg1IHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4uY2FyZCB7XG4gIHRvcDogNTAlO1xuICBsZWZ0OiAxMDAlO1xuICB3aWR0aDogNDM1cHg7XG4gIHBhZGRpbmc6IDMxcHggNDBweDtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { UpdateComponent };","map":{"version":3,"names":["UpdateComponent","constructor","activatedRoute","router","ngOnInit","paramMap","subscribe","param","dataid","console","log","api","fetchdata","data","employee","update","updateemployee","res","navigate","getemployee","i0","ɵɵdirectiveInject","i1","ActivatedRoute","Router","selectors","decls","vars","consts","template","UpdateComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵlistener","UpdateComponent_Template_button_click_30_listener"],"sources":["C:\\Users\\jaitry.patel\\Desktop\\Tasks\\1Rivet Assessments\\TableCrud\\src\\app\\employee\\update\\update.component.ts","C:\\Users\\jaitry.patel\\Desktop\\Tasks\\1Rivet Assessments\\TableCrud\\src\\app\\employee\\update\\update.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Params, Route, Router } from '@angular/router';\r\nimport { datamodel } from '../list/model';\r\n\r\n\r\n@Component({\r\n  selector: 'app-update',\r\n  templateUrl: './update.component.html',\r\n  styleUrls: ['./update.component.scss']\r\n})\r\nexport class UpdateComponent  implements OnInit{\r\n  public dataid!: number;\r\n  public employeedata: any | datamodel;\r\n  api: any;\r\n  employee!:any | datamodel;\r\n  constructor(private activatedRoute: ActivatedRoute, private router: Router ){}\r\n\r\n  ngOnInit(): void {\r\n    this.activatedRoute.paramMap.subscribe((param: Params)=>{\r\n      this.dataid = param['get'](\"id\");\r\n      console.log(\"data id is \", this.dataid);\r\n    })\r\n    this.api.fetchdata(this.dataid).subscribe((data: datamodel) =>{\r\n      this.employee = data;\r\n    })\r\n  }\r\n  update(){\r\n    this.api.updateemployee(this.employee,this.dataid).subscribe((res:datamodel) =>{\r\n      this.router.navigate([\"/\"])\r\n    }\r\n    ).getemployee()\r\n  }\r\n}\r\n","<div class=\"container\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-6\">\r\n            <div class=\"card\">\r\n                <h5>Update Data</h5>\r\n                <div class=\"row\">\r\n                    <div class=\"modal-body\">\r\n                        <form >\r\n                            <div class=\"form-group mb-2\">\r\n                                <label for=\"exampleInputEmail1\">Name</label>\r\n                                <input type=\"text\" class=\"form-control\" \r\n                                name=\"name\" placeholder=\"Enter Name\">\r\n                            </div>\r\n                            <!-- [(ngModel)]=\"employee.name\"  -->\r\n\r\n                            <div class=\"form-group mb-2\">\r\n                                <label for=\"exampleInputEmail1\">Email</label>\r\n                                <input type=\"email\" class=\"form-control\"\r\n                                 name=\"email\"  placeholder=\"Enter Email\">\r\n                            </div>\r\n                            <!-- [(ngModel)]=\"employee.email\" -->\r\n\r\n                            <div class=\"form-group mb-2\">\r\n                                <label for=\"exampleInputEmail1\">City</label>\r\n                                <input type=\"email\" class=\"form-control\" \r\n                                 name=\"city\" placeholder=\"Enter City\">\r\n                            </div>\r\n                            <!-- [(ngModel)]=\"employee.city\" -->\r\n\r\n                            <div class=\"form-group mb-2\">\r\n                                <label for=\"exampleInputEmail1\">Pincode</label>\r\n                                <input type=\"number\" class=\"form-control\"\r\n                                name=\"pincode\" placeholder=\"Enter Pincode \">\r\n                            </div>\r\n                            <!-- [(ngModel)]=\"employee.pincode\" -->\r\n\r\n                            <div class=\"form-group mb-2\">\r\n                                <label for=\"exampleInputEmail1\">Phone No.</label>\r\n                                <input type=\"number\" class=\"form-control\" \r\n                                name=\"phonenumber\" placeholder=\"Enter Phone No.\">\r\n                            </div>\r\n                            <!-- [(ngModel)]=\"employee.phonenumber\" -->\r\n                        </form>\r\n                    </div>\r\n                    <div>\r\n                       <button (click)=\"update()\" class=\"btn btn-success\">Update</button> &nbsp;\r\n                       <button routerLink=\"/\" class=\"btn btn-dark\">Back</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- <pre>{{employee|json}}</pre> -->"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}